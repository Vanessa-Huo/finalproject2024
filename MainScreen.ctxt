#BlueJ class context
comment0.target=MainScreen
comment0.text=\n\ game\ desc...\n\ \n\ @author\ Vanessa\ Huo,\ Megan\ Lee,\ Luke\ Xiao\n\ @version\ June\ 2024\n
comment1.params=
comment1.target=MainScreen()
comment10.params=x
comment10.target=void\ delay(int)
comment11.params=
comment11.target=Fruit\ getRandomFruit()
comment11.text=\n\ Creates\ a\ random\ Fruit.\n\ @return\ Fruit\ A\ new\ Fruit\ of\ random\ type.\n
comment12.params=x
comment12.target=Fruit\ getSpecialFruit(Fruit)
comment12.text=\n\ Creates\ a\ special\ fruit\ that\ has\ the\ same\ type\ as\ given\ fruit.\n\ Given\ Peach\ will\ return\ a\ SpecialPeach\n\ \n\ @param\ fruit\ \ \ \ \ Given\ fruit\n\ @return\ Fruit\ A\ new\ SpecialFruit.\n
comment13.params=y
comment13.target=Fruit\ getBombFruit(Fruit)
comment13.text=\n\ Creates\ a\ bomb\ fruit\ that\ has\ the\ same\ type\ as\ given\ fruit.\n\ \n\ @param\ fruit\ \ \ \ \ Given\ fruit\n\ @return\ Fruit\ A\ new\ BombFruit.\n
comment14.params=i\ j\ di\ dj
comment14.target=int\ getMatchLength(int,\ int,\ int,\ int)
comment14.text=\n\ A\ method\ that\ gives\ the\ length\ of\ a\ match\ starting\ from\ position\ (i,\ j)\ in\ the\ given\ direction\ (di,\ dj).\n\ \n\ @param\ i\ \ \ \ \ The\ row\ index\ to\ start\ the\ match\ check\n\ @param\ j\ \ \ \ \ The\ column\ index\ to\ start\ the\ match\ check\n\ @param\ di\ \ \ \ The\ row\ direction.\ 0\ for\ horizontal\ check\ and\ 1\ for\ vertical\ check\n\ @param\ dj\ \ \ \ The\ col\ direction.\ 1\ for\ horizontal\ check\ and\ 0\ for\ vertical\ check\n\ @return\ \ \ \ \ \ The\ length\ of\ the\ match\ (three,\ four,\ five)\n
comment15.params=i\ j\ di\ dj\ length
comment15.target=void\ removeCrush(int,\ int,\ int,\ int,\ int)
comment15.text=\n\ Removes\ the\ match\ starting\ from\ the\ specified\ position\ (i,\ j)\ in\ the\ given\ direction\ (di,\ dj).\n\ \n\ @param\ i\ \ \ \ \ The\ row\ index\ to\ start\ removing\n\ @param\ j\ \ \ \ \ The\ column\ index\ to\ start\ removing\n\ @param\ di\ \ \ \ The\ row\ direction.\ 0\ for\ horizontal\ check\ and\ 1\ for\ vertical\ check\n\ @param\ dj\ \ \ \ The\ col\ direction.\ 1\ for\ horizontal\ check\ and\ 0\ for\ vertical\ check\n\ @param\ length\ \ \ \ The\ number\ of\ fruits\ to\ remove\ (length\ of\ the\ match)\n
comment16.params=i\ j
comment16.target=void\ removeSameColor(int,\ int)
comment16.text=\n\ Removes\ all\ the\ fruits\ that\ have\ the\ type\ as\ fruit\ at\ board[i][j]\n\ \n\ @param\ i\ \ \ \ \ The\ row\ index\n\ @param\ j\ \ \ \ \ The\ column\ index\n
comment17.params=fruitClass
comment17.target=void\ clearFruit(java.lang.Class)
comment17.text=\n\ Clears\ the\ specified\ type\ of\ fruit\ from\ the\ board\ by\ setting\ their\ positions\ to\ null.\n\ \n\ @param\ fruitClass\ the\ class\ type\ of\ the\ fruit\ to\ be\ cleared\ from\ the\ board\n
comment18.params=i\ j
comment18.target=void\ removeRowCol(int,\ int)
comment18.text=\n\ Removes\ all\ fruits\ in\ the\ given\ row\ i\ and\ column\ j.\n\ \n\ @param\ i\ \ \ \ \ The\ row\ index\ to\ remove\n\ @param\ j\ \ \ \ \ The\ column\ index\ to\ remove\n
comment19.params=one\ two
comment19.target=boolean\ isSameClass(Fruit,\ Fruit)
comment19.text=\n\ Check\ if\ two\ objects\ are\ in\ the\ same\ class\ (include\ subclass).\n\ \n\ @param\ i\ \ \ \ \ First\ fruit\n\ @param\ j\ \ \ \ \ Second\ fruit\n\ @return\ boolean\ \ \ \ \ Return\ "true"\ if\ they\ are\ in\ the\ same\ class\n
comment2.params=
comment2.target=void\ started()
comment20.params=isNew
comment20.target=void\ drawBoard(boolean)
comment20.text=\n\ Adds\ fruits\ onto\ board.\n\ If\ hasn't\ been\ set\ up\ already,\ initialize\ fruits.\ \n\ \n\ @param\ isNew\ \ \ Initial\ set\ up\ or\ not\n
comment21.params=
comment21.target=int\ getTileSize()
comment21.text=\n\ Returns\ width/height\ of\ tile\n\ \n\ @return\ \ size\ of\ tile\n
comment22.params=
comment22.target=void\ resetSelection()
comment22.text=\n\ Removes\ all\ current\ selection\ boxes\ from\ world.\n
comment23.params=fruit\ outerIndex
comment23.target=int\ getIndex(Fruit,\ boolean)
comment23.text=\n\ Locates\ and\ returns\ outer\ or\ inner\ index\ of\ a\ fruit\ within\ 2D\ array.\n\ \n\ @param\ fruit\ \ \ \ \ \ \ \ \ Fruit\ to\ determine\ index\ of\ \n\ @param\ outerIndex\ \ \ \ To\ return\ the\ outer\ index\ (true)\ or\ not\ (false)\n\ @return\ int\ \ \ \ \ \ \ \ \ \ Outer/Inner\ index\ of\ fruit\n
comment24.params=oldOne\ newOne
comment24.target=void\ replace(Fruit,\ Fruit)
comment24.text=\n\ Stores\ the\ indexes\ of\ the\ first\ first\ within\ 2D\ array.\ \n\ Remove\ the\ first\ fruit\ and\ replace\ it\ with\ the\ second\ fruit\ at\ the\ same\ position\ within\ 2D\ array.\n\ \n\ @param\ oldOne\ \ \ \ \ Fruit\ that\ needs\ to\ be\ replaced\ \n\ @param\ newOne\ \ \ \ \ New\ fruit\ that\ replaces\ the\ old\ one\n
comment25.params=outerIndex1\ innerIndex1\ outerIndex2\ innerIndex2
comment25.target=void\ swapFruits(int,\ int,\ int,\ int)
comment25.text=\n\ Swaps\ positions\ of\ two\ fruits\ within\ the\ 2D\ array.\n\ Refreshes\ board\ to\ display\ changes.\n\ \n\ @param\ outerIndex1\ \ \ Outer\ index\ of\ first\ fruit\n\ @param\ innerIndex1\ \ \ Inner\ index\ of\ first\ fruit\n\ @param\ outerIndex2\ \ \ Outer\ index\ of\ second\ fruit\n\ @param\ outerIndex2\ \ \ Inner\ index\ of\ second\ fruit\n\ \n
comment26.params=
comment26.target=void\ triggerExplosions()
comment27.params=
comment27.target=int\ getRows()
comment28.params=
comment28.target=int\ getColumns()
comment3.params=
comment3.target=void\ act()
comment4.params=
comment4.target=void\ text()
comment4.text=\n\ TEMPORARY\ BEFORE\ ART\n
comment5.params=removeCrushes
comment5.target=boolean\ crushThree(boolean)
comment5.text=\n\ Checks\ for\ horizontal\ and\ vertical\ matches\ of\ three\ Fruits\ and\ removes\ them.\n\ \n\ @param\ removeCrushes\ \ \ Remove\ found\ crushes\ (true)\ or\ not\ (false)\n\ @return\ boolean\ \ Crush\ was\ found\ (true)\ or\ not\ (false)\n
comment6.params=removeCrushes
comment6.target=boolean\ crushFour(boolean)
comment6.text=\n\ Checks\ for\ horizontal\ and\ vertical\ matches\ of\ four\ Fruits\ and\ removes\ them.\n\ \n\ @param\ removeCrushes\ \ \ Remove\ found\ crushes\ (true)\ or\ not\ (false)\n\ @return\ boolean\ \ Crush\ was\ found\ (true)\ or\ not\ (false)\n
comment7.params=removeCrushes
comment7.target=boolean\ crushFive(boolean)
comment7.text=\n\ Checks\ for\ matches\ of\ five\ or\ more\ Fruits\ and\ removes\ them.\n\ \n\ @param\ removeCrushes\ \ \ Remove\ found\ crushes\ (true)\ or\ not\ (false)\n\ @return\ boolean\ \ Crush\ was\ found\ (true)\ or\ not\ (false)\n
comment8.params=
comment8.target=boolean\ watermelonBomb()
comment9.params=
comment9.target=void\ dropFruits()
comment9.text=\n\ Drops\ the\ Fruits\ to\ fill\ empty\ spaces\ below\ them\ and\ refills\ the\ board\ with\ new\ Fruits\ at\ the\ top.\n
numComments=29
